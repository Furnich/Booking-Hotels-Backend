services:

  db:
    image: postgres:17
    container_name: booking_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: booking_app
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-non-dev
    ports:
      - 5433:5432

  redis:
    image: redis:7
    container_name: booking_redis

  booking:
    image: booking_image
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    depends_on:
      - db
      - redis
    ports:
      - 7777:8000
    volumes:
      - ./docker/wait-for-it.sh:/booking/docker/wait-for-it.sh
    entrypoint: ["/bin/sh", "-c", "chmod +x /booking/docker/wait-for-it.sh && exec /booking/docker/wait-for-it.sh db:5432 30 -- /booking/docker/app.sh"]
    
  celery:
    build:
      context: .
    container_name: booking_celery
    command: ["/booking/docker/celery.sh", "celery"]
    env_file:
      - .env-non-dev
    depends_on:
      - redis

  flower:
    build:
      context: .
    container_name: booking_flower
    command: ["/booking/docker/celery.sh", "flower"]
    env_file:
      - .env-non-dev
    depends_on:
      - redis
  
  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000
  
volumes:
  grafanadata:
  prometheusdata:
  postgresdata:
